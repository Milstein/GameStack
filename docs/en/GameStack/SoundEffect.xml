<Type Name="SoundEffect" FullName="GameStack.SoundEffect">
  <TypeSignature Language="C#" Value="public class SoundEffect : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoundEffect extends System.Object implements class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>GameStack.Desktop</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>An individual sound effect asset, commonly a short sound snippet that will be buffered in memory.</summary>
    <remarks>For longer sounds such as music tracks, consider the <see cref="T:GameStack.StreamingOpusFile" /> class. To play sound effects, use the <see cref="T:GameStack.SoundChannel" /> class.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoundEffect (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Relative asset path.</param>
        <summary>Load a sound effect into memory from the asset path specified.</summary>
        <remarks>File types currently supported are .wav and .opus; no special pipeline processing is required.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoundEffect (System.IO.Stream inputStream, bool isOpus = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream inputStream, bool isOpus) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="inputStream" Type="System.IO.Stream" />
        <Parameter Name="isOpus" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inputStream">The stream containing the supported audio format.</param>
        <param name="isOpus">True to use the Ogg Opus file format, false to use WAV.</param>
        <summary>Create a sound effect in memory directly from a stream.</summary>
        <remarks>Currently supported formats are .wav and .opus.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Must be called to release sound buffer.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public float Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the length of the sound in seconds.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
