<Type Name="Touch" FullName="GameStack.Touch">
  <TypeSignature Language="C#" Value="public class Touch : GameStack.EventBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Touch extends GameStack.EventBase" />
  <AssemblyInfo>
    <AssemblyName>GameStack.Desktop</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>GameStack.EventBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Instances of this type will be added to the event queue whenever a touch event occurs.</summary>
    <remarks>Touch events include things like finger down, repeated movements, and finger up. For higher level gesture support (where available) see classes derived from <see cref="T:GameStack.Gesture" />. On desktop platforms, mouse events will act like touch events (with left click representing a finger down action).</remarks>
  </Docs>
  <Members>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public long Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the touch index for this event.</summary>
        <value>
        </value>
        <remarks>The touch index for a single physical touch remains consistent between frames so that individual touches can be tracked separately. On desktop, mouse events always use index 0.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVirtual">
      <MemberSignature Language="C#" Value="public bool IsVirtual { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVirtual" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Was the touch event generated by the system?</summary>
        <value>
        </value>
        <remarks>When true, the touch event was not the result of an actual physical touch but was instead generated (e.g., from a mouse event).</remarks>
      </Docs>
    </Member>
    <Member MemberName="Point">
      <MemberSignature Language="C#" Value="public OpenTK.Vector2 Point { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype OpenTK.Vector2 Point" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>OpenTK.Vector2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the normalized view point (-1 to 1).</summary>
        <value>
        </value>
        <remarks>This value is suitable for unprojection.</remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public GameStack.TouchState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype GameStack.TouchState State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>GameStack.TouchState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current state of this touch.</summary>
        <value>
        </value>
        <remarks>A single touch may go through multiple phases, so it will generate repeated events with updated states.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SurfacePoint">
      <MemberSignature Language="C#" Value="public OpenTK.Vector2 SurfacePoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype OpenTK.Vector2 SurfacePoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>OpenTK.Vector2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the viewport point in pixels.</summary>
        <value>
        </value>
        <remarks>When an orthographic 2D camera is used with its origin in the lower left corner, this value will map directly to world coordinates, making it handy for easy hit testing without the need to unproject.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
