<Type Name="IUpdater" FullName="GameStack.IUpdater">
  <TypeSignature Language="C#" Value="public interface IUpdater" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IUpdater" />
  <AssemblyInfo>
    <AssemblyName>GameStack.Desktop</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Implemented by any object that wants to receive an update each frame.</summary>
    <remarks>This interface applies to any class derived from <see cref="T:GameStack.Scene" /> or that is added to the scene's collection.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update (GameStack.FrameArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(class GameStack.FrameArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="GameStack.FrameArgs" />
      </Parameters>
      <Docs>
        <param name="e">Information about the current frame.</param>
        <summary>Called once per frame before rendering.</summary>
        <remarks>If your implementation is not called, make sure you've implemented it on your scene class or any object added to the scene collection.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
