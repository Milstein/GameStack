<Type Name="StreamingSoundChannel" FullName="GameStack.StreamingSoundChannel">
  <TypeSignature Language="C#" Value="public class StreamingSoundChannel : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StreamingSoundChannel extends System.Object implements class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>GameStack.Desktop</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>A sound channel that can be used to play sounds streamed from asset resources.</summary>
    <remarks>Use of this class saves memory, but generally involves higher overhead and start/stop latency. For small or rapidly played sounds, consider using <see cref="T:GameStack.SoundEffect" /> and <see cref="T:GameStack.SoundChannel" />.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamingSoundChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentSound">
      <MemberSignature Language="C#" Value="public GameStack.IStreamingSound CurrentSound { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class GameStack.IStreamingSound CurrentSound" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>GameStack.IStreamingSound</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the currently playing sound, or the sound that was last played, or null if no sound has been played.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Must be called to release sound channel resources.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPlaying">
      <MemberSignature Language="C#" Value="public bool IsPlaying { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPlaying" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Is the channel currently playing a sound?</summary>
        <value>
        </value>
        <remarks>False if no sound has been played, or if a sound has finished playing.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pause the currently playing sound.</summary>
        <remarks>No effect if no sound is playing.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Play">
      <MemberSignature Language="C#" Value="public bool Play ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Play() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Play or resume the current sound.</summary>
        <returns>
        </returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlaySound">
      <MemberSignature Language="C#" Value="public bool PlaySound (GameStack.IStreamingSound sound, bool loop = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool PlaySound(class GameStack.IStreamingSound sound, bool loop) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sound" Type="GameStack.IStreamingSound" />
        <Parameter Name="loop" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sound">The streaming sound to be played.</param>
        <param name="loop">True to loop infinitely.</param>
        <summary>Set a new current sound asset and begin playing.</summary>
        <returns>
        </returns>
        <remarks>If a sound is already playing on this channel, it is stopped and replaced with the new sound asset.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stop the currently playing sound.</summary>
        <remarks>No effect if no sound is playing.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Volume">
      <MemberSignature Language="C#" Value="public float Volume { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Volume" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the channel's volume.</summary>
        <value>0 through 1, where 0 is silence and 1 is maximum volume.</value>
        <remarks>This property affects only this channel. Each channel maintains its volume independently.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
