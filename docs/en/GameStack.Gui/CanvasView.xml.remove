<Type Name="CanvasView" FullName="GameStack.Gui.CanvasView">
  <TypeSignature Language="C#" Value="public class CanvasView : GameStack.Gui.View" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CanvasView extends GameStack.Gui.View" />
  <AssemblyInfo>
    <AssemblyName>GameStack.Desktop</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>GameStack.Gui.View</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>A base class for views that which to use the Cairo drawing API.</summary>
    <remarks>This class manages the underlying drawing surface and keeps its size synchronized with the size of the control. Due to the added size of the drawing libraries, this type has been split into a separate assembly for mobile targets.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CanvasView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CanvasView (GameStack.Gui.LayoutSpec spec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class GameStack.Gui.LayoutSpec spec) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="spec" Type="GameStack.Gui.LayoutSpec" />
      </Parameters>
      <Docs>
        <param name="spec">Layout.</param>
        <summary>
        </summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Commit() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Transfers the contents of the drawing surface to the underlying texture for rendering.</summary>
        <remarks>This method is called automatically, but may be called manually to force early synchronization.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public Cairo.Context Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Cairo.Context Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Cairo.Context</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reference to the view's cairo drawing context.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This must be called to release the drawing surface and texture buffer.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>When called, the contents of the view will be redrawn during the next render phase.</summary>
        <remarks>Call this method when any of your visual properties have changed in order to force the control to redraw.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Layout">
      <MemberSignature Language="C#" Value="public override void Layout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Layout() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDraw">
      <MemberSignature Language="C#" Value="protected override void OnDraw (ref OpenTK.Matrix4 transform);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDraw(valuetype OpenTK.Matrix4 transform) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transform" Type="OpenTK.Matrix4&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="transform">
        </param>
        <summary>This method is not normally overridden.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDraw">
      <MemberSignature Language="C#" Value="protected virtual void OnDraw (GameStack.Graphics.Quad quad, ref OpenTK.Matrix4 transform);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDraw(class GameStack.Graphics.Quad quad, valuetype OpenTK.Matrix4 transform) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quad" Type="GameStack.Graphics.Quad" />
        <Parameter Name="transform" Type="OpenTK.Matrix4&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="quad">
        </param>
        <param name="transform">
        </param>
        <summary>This method is not normally overridden. A subtype may wish to override the way the final quad is rendered.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDraw">
      <MemberSignature Language="C#" Value="protected virtual void OnDraw (Cairo.Context ctx, double w, double h);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDraw(class Cairo.Context ctx, float64 w, float64 h) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Cairo.Context" />
        <Parameter Name="w" Type="System.Double" />
        <Parameter Name="h" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="ctx">The Cairo drawing context.</param>
        <param name="w">The surface width in pixels.</param>
        <param name="h">The surface height in pixels.</param>
        <summary>Override this method to draw the control.</summary>
        <remarks>Anything drawn outside the surface area will be clipped.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
