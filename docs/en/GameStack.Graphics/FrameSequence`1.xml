<Type Name="FrameSequence&lt;T&gt;" FullName="GameStack.Graphics.FrameSequence&lt;T&gt;">
  <TypeSignature Language="C#" Value="public class FrameSequence&lt;T&gt; : GameStack.IUpdater" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FrameSequence`1&lt;T&gt; extends System.Object implements class GameStack.IUpdater" />
  <AssemblyInfo>
    <AssemblyName>GameStack.Desktop</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>GameStack.IUpdater</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">The type of object to be sequenced.</typeparam>
    <summary>Abstract base class for classes providing functionality related to sequences of frames.</summary>
    <remarks>Add this object to your scene collection to automatically update it each frame. Otherwise, pump it manually in your update method.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FrameSequence (int framesPerSecond, bool loop, T[] frames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 framesPerSecond, bool loop, !T[] frames) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="framesPerSecond" Type="System.Int32" />
        <Parameter Name="loop" Type="System.Boolean" />
        <Parameter Name="frames" Type="T[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="framesPerSecond">The animation rate in frames per second.</param>
        <param name="loop">True to loop infinitely.</param>
        <param name="frames">One or more objects representing the frames.</param>
        <summary>
        </summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public T Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current frame.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDone">
      <MemberSignature Language="C#" Value="public bool IsDone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>True if the sequence has finished.</summary>
        <value>
        </value>
        <remarks>This is never true if the sequence is looping.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stop the sequence and reset to the beginning.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update (GameStack.FrameArgs frame);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(class GameStack.FrameArgs frame) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frame" Type="GameStack.FrameArgs" />
      </Parameters>
      <Docs>
        <param name="frame">Frame information.</param>
        <summary>Advance the sequence by the specified time.</summary>
        <remarks>Usually called by the scene when added to the scene collection, but can be pumped manually.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
