<Type Name="Quad" FullName="GameStack.Graphics.Quad">
  <TypeSignature Language="C#" Value="public class Quad : GameStack.Graphics.Drawable2D, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Quad extends GameStack.Graphics.Drawable2D implements class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>GameStack.Desktop</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>GameStack.Graphics.Drawable2D</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>A convenience type that can render a simple quad using a specified material.</summary>
    <remarks>Quads contain four coplanar points and can be used to draw textured or non-textured images. Quads can have a default material. If another material is in scope when the quad is drawn, that material is used instead.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Quad (OpenTK.Vector4 rect, OpenTK.Vector4 color, bool flipY = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype OpenTK.Vector4 rect, valuetype OpenTK.Vector4 color, bool flipY) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="OpenTK.Vector4" />
        <Parameter Name="color" Type="OpenTK.Vector4" />
        <Parameter Name="flipY" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rect">Specifies the actual quad geometry. For a quad of unit size centered at the origin, use (-0.5, -0.5, 0.5, 0.5).</param>
        <param name="color">Color applied to each vertex.</param>
        <param name="flipY">If true, the texture coordinates are vertically flipped to compensate for upside-down images.</param>
        <summary>
        </summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Quad (GameStack.Graphics.Material material, OpenTK.Vector4 rect, OpenTK.Vector4 color, bool flipV = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class GameStack.Graphics.Material material, valuetype OpenTK.Vector4 rect, valuetype OpenTK.Vector4 color, bool flipV) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="material" Type="GameStack.Graphics.Material" />
        <Parameter Name="rect" Type="OpenTK.Vector4" />
        <Parameter Name="color" Type="OpenTK.Vector4" />
        <Parameter Name="flipV" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="material">If specified, use this material by default when drawing the quad.</param>
        <param name="rect">Specifies the actual quad geometry. For a quad of unit size centered at the origin, use (-0.5, -0.5, 0.5, 0.5).</param>
        <param name="color">Color applied to each vertex.</param>
        <param name="flipV">True to correct for vertically flipped images.</param>
        <summary>
        </summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Must be called to dispose the quad's geometry resources.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Material">
      <MemberSignature Language="C#" Value="public GameStack.Graphics.Material Material { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class GameStack.Graphics.Material Material" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>GameStack.Graphics.Material</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the quad's default material.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDraw">
      <MemberSignature Language="C#" Value="protected override void OnDraw (ref OpenTK.Matrix4 world);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDraw(valuetype OpenTK.Matrix4 world) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="world" Type="OpenTK.Matrix4&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="world">
        </param>
        <summary>
        </summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
