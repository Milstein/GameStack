<Type Name="BitmapChar" FullName="GameStack.Graphics.BitmapChar">
  <TypeSignature Language="C#" Value="public class BitmapChar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BitmapChar extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>GameStack.Desktop</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Holds information about a single bitmap character glyph.</summary>
    <remarks>Instances of this class can be accessed via <see cref="T:GameStack.Graphics.BitmapFont" /> assets.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public int Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the character ID, usually corresponding to the character's numerical value.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public OpenTK.Vector2 Offset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype OpenTK.Vector2 Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>OpenTK.Vector2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the value by which the glyph will be offset when rendering.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public OpenTK.Vector2 Size { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype OpenTK.Vector2 Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>OpenTK.Vector2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the the total size of the glyph.</summary>
        <value>
        </value>
        <remarks>This is the actual area taken up by the visual and does not include offsets or kerning.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UV">
      <MemberSignature Language="C#" Value="public OpenTK.Vector4 UV { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype OpenTK.Vector4 UV" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>OpenTK.Vector4</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the glyph's position within the font texture.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XAdvance">
      <MemberSignature Language="C#" Value="public float XAdvance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 XAdvance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the amount of horizontal space that the virtual caret should advance after rendering this character.</summary>
        <value>
        </value>
        <remarks>This does not include character pair kerning overrides.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
